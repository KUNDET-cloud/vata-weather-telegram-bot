import { Markup } from "telegraf";

import { ACTIONS } from "../const.js";

// –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –≤ —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –∫–ª–∞—Å—Å—ã
export default class Send {
  static Menu (ctx) {
    ctx.reply(
      "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ",
      Markup.keyboard([
        [ACTIONS.TODAY, ACTIONS.TOMORROW],
        [ACTIONS.THREE_DAYS, ACTIONS.CHANGE_LOCATION],
      ]).resize()
    );
  }

  // –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
  static TodayForecast (ctx, res) {
    if (res == null) {
      ctx.reply("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :/\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ");
      return;
    }
    const location = `üèô  ${res.location.country}, ${res.location.name}`;
    res = res.forecast.forecastday[0].day;

    const condition = `üí¨  ${res.condition.text}`;
    const temperature = `üå°  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${res.maxtemp_c}¬∞C`;
    const wind = `üí®  –í–µ—Ç–µ—Ä ${res.maxwind_kph}–∫–º/—á`;
        
    ctx.replyWithHTML(`
<i>${location}</i>\n
<b>–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>
<b>${condition}</b>
<b>${temperature}</b>
<b>${wind}</b>`);

    const iconUrl =  `https:${res.condition.icon.replace("64x64", "128x128")}`;

    ctx.replyWithPhoto({ url: iconUrl });
  }

  // –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
  static TomorrowForecast (ctx, res) {
    if (res == null) {
      ctx.reply("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :/\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ");
      return;
    }
    const location = `üèô  ${res.location.country}, ${res.location.name}`;
    res = res.forecast.forecastday[1].day;

    const condition = `üí¨  ${res.condition.text}`;
    const temperature = `üå°  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${res.maxtemp_c}¬∞C`;
    const wind = `üí®  –í–µ—Ç–µ—Ä ${res.maxwind_kph}–∫–º/—á`;
        
    ctx.replyWithHTML(`
<i>${location}</i>\n
<b>–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –∑–∞–≤—Ç—Ä–∞:</b>
<b>${condition}</b>
<b>${temperature}</b>
<b>${wind}</b>`);

    const iconUrl =  `https:${res.condition.icon.replace("64x64", "128x128")}`;

    ctx.replyWithPhoto({ url: iconUrl });
  }

  // –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–µ–¥–µ–ª—é
  static SeveralDaysForecast (ctx, res) {
    if (res == null) {
      ctx.reply("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :/\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ");
      return;
    }

    const days = res.forecast.forecastday;
    let replyHtml = `<i>üèô  ${res.location.country}, ${res.location.name}</i>\n\n`;

    for(let i = 0; i < days.length; i++) {
      replyHtml+=`<b>–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ ${days[i].date.replaceAll('-','.')}</b>\n`
      replyHtml+=`<b>üí¨  ${days[i].day.condition.text}</b>\n`
      replyHtml += `<b>üå°  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${days[i].day.maxtemp_c}¬∞C</b>\n`;
      replyHtml += `<b>üí®  –í–µ—Ç–µ—Ä ${days[i].day.maxwind_kph}–∫–º/—á</b>\n\n`;
    }
      
    ctx.replyWithHTML(replyHtml)
  }

  // –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –¥–≤–µ –Ω–µ–¥–µ–ª–∏
  static TwoWeeksForecast (ctx, res) {
    ctx.reply('Two weeks')
  }
  
  static Location = (ctx, res) => ctx.reply(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n${res.country}, ${res.region}, ${res.name}`)
  static LocationNotFound = ctx => ctx.reply('–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
};
