import { Markup } from "telegraf";

import { ACTIONS } from "../const.js";

// –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –≤ —Å—Ç–∞—Ç–∏—á–Ω—ã–µ –∫–ª–∞—Å—Å—ã
export const Send = {
  Menu: (ctx) => {
    ctx.reply(
      "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ",
      Markup.keyboard([
        [ACTIONS.TODAY, ACTIONS.TOMORROW],
        [ACTIONS.ONE_WEEK, ACTIONS.TWO_WEEKS],
        [ACTIONS.CHANGE_LOCATION],
      ]).resize()
    );
  },

  TodayForecast: (ctx, res) => {
    if (res == null) {
      ctx.reply("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ :/\n–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ");
      return;
    }
    const location = `üèô  ${res.location.country}, ${res.location.name}`;
    res = res.forecast.forecastday[0].day;

    const condition = `üí¨  ${res.condition.text}`;
    const temperature = `üå°  –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${res.maxtemp_c}¬∞C`;
    const wind = `üí®  –í–µ—Ç–µ—Ä ${res.maxwind_kph}–∫–º/—á`;
        
    ctx.replyWithHTML(`        
<i>${location}</i>

<b>–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>
<b>${condition}</b>
<b>${temperature}</b>
<b>${wind}</b>`);

    const iconUrl =  `https:${res.condition.icon.replace("64x64", "128x128")}`;

    ctx.replyWithPhoto({ url: iconUrl });
  },

  TomorrowForecast: (ctx, res) => {
    ctx.replyWithHTML(`<b>–°–∞–º –∂–∏—Ä–Ω—ã–π</b>
    <i>–ö—É—Ä—Å–∏–≤</i>
    `)
  },
  OneWeekForecast: (ctx, res) => {
    ctx.reply('One week')
  },
  TwoWeeksForecast: (ctx, res) => {
    ctx.reply('Two weeks')
  },
  Location: (ctx, res) => ctx.reply(`–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:\n${res.country}, ${res.region}, ${res.name}`),
  LocationNotFound: ctx => ctx.reply('–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'),
};
